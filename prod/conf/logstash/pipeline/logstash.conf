input {
  beats {
    port => 5044
  }
}

filter {
  if [event][dataset] == "nginx" {
    grok { match => [ "message", "%{IPORHOST:remote_ip} - %{DATA:user_name} \[%{HTTPDATE:[@metadata][timestamp]}\] \"%{WORD:method} %{DATA:url} HTTP/%{NUMBER:http_version}\" %{NUMBER:response_code} %{NUMBER:body_sent} \"%{DATA:referrer}\" \"%{DATA:http_client} \(%{WORD:os}. %{WORD:os_arc}. %{WORD:http_client_hash}. %{TIMESTAMP_ISO8601:request_time} %{ISO8601_TIMEZONE:tz_offset} %{TZ:tz}\)\"" ] }
    date { match => [ "[@metadata][timestamp]", "dd/MMM/yyyy:HH:mm:ss Z"] }
  }
  if [event][dataset] == "php-fpm" {
    grok { match => [ "message", "%{IPORHOST:remote_ip} - %{DATA:user_name} %{HTTPDATE:[@metadata][timestamp]} \"%{WORD:method} %{DATA:url}\" %{NUMBER:response_code}" ] }
    date { match => [ "[@metadata][timestamp]", "dd/MMM/yyyy:HH:mm:ss Z"] }
  }
  if [event][dataset] == "mysql" {
    grok { match => [ "message", "%{TIMESTAMP_ISO8601:[@metadata][timestamp]} %{INT:pid} \[%{DATA:loglevel}\] \[%{DATA:subsystem}\] \[%{DATA:unit}\] %{GREEDYDATA:message}" ] }
    date { match => [ "[@metadata][timestamp]", "yyyy-MM-dd.HH:mm:ss.msZ"] }
  }
}

output {
  elasticsearch {
    hosts => ["${ELASTICSEARCH_HOST}"]
    index => "cms-%{[docker][container][labels][com_docker_compose_service]}-%{+yyyy.MM.dd}"
    action => "create"
  }
}

input {
  dead_letter_queue {
    path => "/usr/share/logstash/data/dead_letter_queue"
    commit_offsets => true
    pipeline_id => "main"
  }
}

output {
  stdout {
    codec => rubydebug { metadata => true }
  }
}
